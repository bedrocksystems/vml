---
Checks: '-*,readability-identifier-naming,
            readability-avoid-const-params-in-decls,
            readability-inconsistent-declaration-parameter-name,
            readability-make-member-function-const,
            readability-function-cognitive-complexity,
            readability-function-size,
            readability-non-const-parameter,
            readability-const-return-type,
            readability-simplify-boolean-expr,
            readability-static-accessed-through-instance,
            readability-delete-null-pointer,
            readability-misleading-indentation,
            readability-qualified-auto,
            google-explicit-constructor,
            google-readability-casting,
            bugprone-assert-side-effect,
            bugprone-copy-constructor-init,
            bugprone-infinite-loop,
            bugprone-lambda-function-name,
            bugprone-macro-parentheses,
            bugprone-macro-repeated-side-effects,
            bugprone-multiple-statement-macro,
            bugprone-parent-virtual-call,
            bugprone-sizeof-expression,
            bugprone-suspicious-enum-usage,
            bugprone-swapped-arguments,
            bugprone-terminating-continue,
            bugprone-too-small-loop-variable,
            bugprone-undefined-memory-manipulation,
            bugprone-unhandled-self-assignment,
            bugprone-suspicious-semicolon,
            # readability-magic-numbers, would be nice but too strict for my taste: gpr[6] for example..
            cppcoreguidelines-explicit-virtual-functions,
            cppcoreguidelines-slicing,
            cppcoreguidelines-avoid-goto'
WarningsAsErrors: '*'
FormatStyle: 'file'
HeaderFilterRegex: '/vml/.*'
CheckOptions:
  - key:   readability-identifier-naming.ClassCase
    value: CamelCase
  - key:   readability-identifier-naming.StructCase
    value: CamelCase
  - key:   readability-identifier-naming.ClassIgnoredRegexp
    value: Zeta_ctx
  - key:   readability-identifier-naming.ClassMethodCase
    value: lower_case
  - key:   readability-identifier-naming.NamespaceCase
    value: CamelCase
  - key:   readability-identifier-naming.ConstexprVariableCase
    value: UPPER_CASE
  - key:   readability-identifier-naming.FunctionCase
    value: lower_case
  - key:   readability-identifier-naming.ClassMethodCase
    value: lower_case
  - key:   readability-identifier-naming.VariableCase
    value: lower_case
  - key:   readability-identifier-naming.PublicMemberCase
    value: lower_case
  - key:   readability-identifier-naming.PrivateMemberCase
    value: lower_case
  - key:   readability-identifier-naming.PrivateMemberPrefix
    value: _
  - key:   readability-identifier-naming.ProtectedMemberCase
    value: lower_case
  - key:   readability-identifier-naming.ProtectedMemberPrefix
    value: _
  - key:   readability-identifier-naming.MacroDefinitionCase
    value: UPPER_CASE
  - key:   readability-identifier-naming.EnumCase
    value: CamelCase
  - key:   readability-identifier-naming.EnumConstantCase
    value: UPPER_CASE
  - key:   readability-identifier-naming.ParameterCase
    value: lower_case
  - key:   readability-identifier-naming.TemplateParameterCase
    value: UPPER_CASE
  - key:   readability-function-size.NestingThreshold
    value: 4
  - key:   readability-function-size.VariableThreshold
    value: 8
  - key:   readability-function-size.LineThreshold
    value: 100
  - key:   readability-function-size.ParameterThreshold
    value: 6
  - key:   bugprone-assert-side-effect.AssertMacros
    value: ASSERT
  - key:   bugprone-assert-side-effect.CheckFunctionCalls
    value: 1
